"""added level

Revision ID: 9c56ff37bfba
Revises: 6e8139dc4a02
Create Date: 2023-11-03 23:55:33.379330

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "9c56ff37bfba"
down_revision: Union[str, None] = "6e8139dc4a02"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # create pg enum
    difficulty_level = postgresql.ENUM(
        "EASY", "MEDIUM", "HARD", name="difficulty_level"
    )
    difficulty_level.create(op.get_bind())

    op.create_table(
        "hints",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("task_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["task_id"],
            ["tasks.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )

    op.add_column(
        "tasks",
        sa.Column(
            "difficulty_level",
            postgresql.ENUM("EASY", "MEDIUM", "HARD", name="difficulty_level"),
            nullable=False,
        ),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("tasks", "difficulty_level")
    op.drop_table("hints")

    # drop pg enum
    bind = op.get_bind()
    sa.Enum(name="difficulty_level").drop(bind, checkfirst=False)
    # ### end Alembic commands ###

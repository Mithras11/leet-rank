"""initial migration

Revision ID: 49c81d5938d3
Revises: 
Create Date: 2023-11-09 13:27:22.066302

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '49c81d5938d3'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tags',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('text', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=False),
    sa.Column('nickname', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('about', sa.String(), nullable=False),
    sa.Column('join_date', sa.DateTime(), nullable=False),
    sa.Column('last_login', sa.DateTime(), nullable=False),
    sa.Column('task_stars_received', sa.Integer(), nullable=False),
    sa.Column('solution_stars_received', sa.Integer(), nullable=False),
    sa.Column('role', sa.Enum('user', 'staff', 'admin', name='user_roles'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('profile_images',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('content', sa.LargeBinary(), nullable=False),
    sa.Column('upload_date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tasks',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('difficulty_level', sa.Enum('easy', 'medium', 'hard', name='difficulty_levels'), nullable=False),
    sa.Column('author_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('hints',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('task_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('solutions',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('task_id', sa.Uuid(), nullable=False),
    sa.Column('author_id', sa.Uuid(), nullable=False),
    sa.Column('create_date', sa.DateTime(), nullable=False),
    sa.Column('last_modified', sa.DateTime(), nullable=False),
    sa.Column('content', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('task_descriptions',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('task_id', sa.Uuid(), nullable=False),
    sa.Column('text', sa.String(), nullable=False),
    sa.Column('links', postgresql.ARRAY(sa.String()), nullable=False),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('task_votes',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('task_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('stars_count', sa.Integer(), nullable=False),
    sa.CheckConstraint('stars_count <= 5', name='check_max_stars_count'),
    sa.CheckConstraint('stars_count >= 0', name='check_min_stars_count'),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tasks_tags',
    sa.Column('task_id', sa.Uuid(), nullable=False),
    sa.Column('tag_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.PrimaryKeyConstraint('task_id', 'tag_id')
    )
    op.create_table('test_data',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('task_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('solution_descriptions',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('solution_id', sa.Uuid(), nullable=False),
    sa.Column('text', sa.String(), nullable=False),
    sa.Column('links', postgresql.ARRAY(sa.String()), nullable=False),
    sa.ForeignKeyConstraint(['solution_id'], ['solutions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('solution_votes',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('solution_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('stars_count', sa.Integer(), nullable=False),
    sa.CheckConstraint('stars_count <= 5', name='check_max_stars_count'),
    sa.CheckConstraint('stars_count >= 0', name='check_min_stars_count'),
    sa.ForeignKeyConstraint(['solution_id'], ['solutions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('task_description_images',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('task_description_id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('content', sa.LargeBinary(), nullable=False),
    sa.Column('upload_date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['task_description_id'], ['task_descriptions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('test_cases',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('arguments', sa.String(), nullable=False),
    sa.Column('expected_result', sa.String(), nullable=False),
    sa.Column('test_data_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['test_data_id'], ['test_data.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('solution_description_images',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('solution_description_id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('content', sa.LargeBinary(), nullable=False),
    sa.Column('upload_date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['solution_description_id'], ['solution_descriptions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('solution_description_images')
    op.drop_table('test_cases')
    op.drop_table('task_description_images')
    op.drop_table('solution_votes')
    op.drop_table('solution_descriptions')
    op.drop_table('test_data')
    op.drop_table('tasks_tags')
    op.drop_table('task_votes')
    op.drop_table('task_descriptions')
    op.drop_table('solutions')
    op.drop_table('hints')
    op.drop_table('tasks')
    op.drop_table('profile_images')
    op.drop_table('users')
    op.drop_table('tags')
    # ### end Alembic commands ###
